@charset "UTF-8";
/**
 * @file
 * SMACSS: base
 *
 * CSS reset, HTML elements and any other very basic stuffs.
 * All basic stuff is in base subdirectory.
 *
 * ITCSS: generic, elements
 */
/**
 * Imports
 *
 * First import our custom variables and mixins
 */
/**
 * @file
 * Sass index file
 *
 * The main importer and organizer sass file.
 *
 */
/**
 * Settings
 *
 * Setting files contain **global** configurations that are shared by more than
 * one modules.
 * Settings that are connected to one and only module are a part of the module
 * itself.
 * Local configurations should be contained into the modules (objects,
 * components, etc.) that are related to.
 */
/**
 * @file
 * Settings
 *
 * Setting files contain **global** configurations that are shared by more than
 * one modules. Settings that are connected to one and only module are a part
 * of the module itself.
 * Local configurations should be contained into the modules (objects,
 * components, etc.) that are related to.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 * Breakpoint Settings
 *
 * - Define breakpoint variables
 */
/**
 * @file
 * Color Settings
 *
 * - Define color variables
 */
/**
 * @file
 * Grid Settings
 *
 * - Define grid related variables
 */
/**
 * @file
 * Typography Settings
 *
 * - Import Webfonts
 * - Define Font-families
 * - Define Typography-related global variables
 */
/**
 * Tools
 *
 * Globally used mixins and functions.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 * Tools
 *
 * Tools are sets of globally used sass mixins and functions. Mixins that are
 * connected to one and only module are a part of the module itself.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * Utilities
 *
 * Utilities and helper classes with ability to override anything which goes
 * before in the triangle, eg. hide helper class.
 * They are usually one line of code and have !important to make sure they
 * override all element styles when used.
 */
/**
 * Base
 *
 * Base styles are the default styles of base elements. It's a combination of
 * ITCSS's Generic and Elements layers.
 *
 * A Base rule is applied to an element using an element selector, a descendant
 * selector, or a child selector, along with any pseudo-classes. It doesn’t
 * include any class or ID selectors. Base styles are related to the basic
 * styles of an application, like Typography, Reset and styling of global
 * elements.
 *
 * This is the first layer which generates actual CSS.
 */
/**
 * @file
 * Typography element
 *
 * Text elements.
 */
/**
* @group Basic elements
*/
html {
  text-rendering: optimizeLegibility;
  -webkit-tap-highlight-color: transparent;
  font-size: 62.5%;
}

body {
  color: black;
  background-color: white;
  font-size: 1.6rem;
  line-height: 1.5;
  word-wrap: break-word;
}

::-moz-selection {
  background-color: #f7ca00;
  color: white;
}

::selection {
  background-color: #f7ca00;
  color: white;
}

a {
  text-decoration: none;
  color: #0091cc;
}

a:hover {
  color: #005b80;
}

p:first-child {
  margin-top: 0;
}

p:last-child {
  margin-bottom: 0;
}

ol,
ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UuY3NzIiwiYmFzZS5zY3NzIiwiX2luZGV4LnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy5hbGwuc2NzcyIsIjEuc2V0dGluZ3MvX3NldHRpbmdzLmJyZWFrcG9pbnRzLnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy5jb2xvcnMuc2NzcyIsIjEuc2V0dGluZ3MvX3NldHRpbmdzLmdyaWQuc2NzcyIsIjEuc2V0dGluZ3MvX3NldHRpbmdzLnR5cG9ncmFwaHkuc2NzcyIsIjIudG9vbHMvX3Rvb2xzLmFsbC5zY3NzIiwiMy5iYXNlL19iYXNlLnR5cG9ncmFwaHkuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7Ozs7Ozs7O0VEU0U7QUNDRjs7OztFRElFO0FFZEY7Ozs7OztFRnFCRTtBRWJGOzs7Ozs7Ozs7RUZ1QkU7QUcvQkY7Ozs7Ozs7Ozs7RUgwQ0U7QUkxQ0Y7Ozs7O0VKZ0RFO0FLaERGOzs7OztFTHNERTtBTXRERjs7Ozs7RU40REU7QU81REY7Ozs7Ozs7RVBvRUU7QUUvQ0Y7Ozs7O0VGcURFO0FRMUVGOzs7Ozs7O0VSa0ZFO0FFcERGOzs7Ozs7O0VGNERFO0FDekVGOzs7Ozs7Ozs7Ozs7O0VEdUZFO0FTeEdGOzs7OztFVDhHRTtBU3ZHRjs7Q1QwR0M7QVN2R0Q7RUFDRyxrQ0FBa0M7RUFDbEMsd0NBQXdDO0VBQ3hDLGdCQUFnQjtBVHlHbkI7O0FTdEdBO0VBQ0UsWUpDNkI7RUlBN0IsdUJKRDZCO0VJRTdCLGlCRk8wQjtFRU4xQixnQkZTdUI7RUVSdkIscUJBQXFCO0FUeUd2Qjs7QVN0R0E7RUFDRSx5QkpoQitCO0VJaUIvQixZQUFZO0FUeUdkOztBUzNHQTtFQUNFLHlCSmhCK0I7RUlpQi9CLFlBQVk7QVR5R2Q7O0FTdEdBO0VBQ0UscUJBQXFCO0VBQ3JCLGNKdkIrQjtBTGdJakM7O0FTM0dBO0VBS0ksY0FBa0M7QVQwR3RDOztBU3RHQTtFQUVJLGFBQWE7QVR3R2pCOztBUzFHQTtFQU1JLGdCQUFnQjtBVHdHcEI7O0FTcEdBOztFQUVFLFVBQVU7RUFDVixTQUFTO0VBQ1QsZ0JBQWdCO0FUdUdsQiIsImZpbGUiOiJiYXNlLmNzcyJ9 */

/*# sourceMappingURL=base.css.map */
